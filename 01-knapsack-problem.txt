01knapsack(profitArr, weightArr, n, capacity):
    create k[n+1][capacity+1]
    for i=0 to n
        for w=0 to capacity
            if i==0||w==0
                k[i][w]=0
            else if weightArr[i]<=w
                k[i][w]=max(profitArr[i]+k[i-1][w-weightArr[i]], 
                            k[i-1][w])
            else
                k[i][w]=k[i-1][w]
    i=n
    j=capacity
    create resultVec[n] and initialize all values to 0 
    while i>0 and j>0
        if k[i][j] == k[i-1][j]
            resultVec[i]=0 and i=i-1
        else
            resultVec[i]=1 and i=i-1
            j=j-weightArr[i]

    return resultVec